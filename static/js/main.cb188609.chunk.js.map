{"version":3,"sources":["components/button/button.jsx","App.jsx","components/functions.jsx","components/numbers.jsx","components/math-operations.jsx","components/result.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","console","log","clickHandlerFunction","onClickNumber","number","onClickOperation","operation","onClickEqual","equal","eval","toString","onContentClear","onDelete","deleteStack","substring","Functions","numbers","renderButtons","map","Numbers","MathOperations","propsTypes","PropTypes","func","isRequired","Result","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4HAoBeA,IAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACb,wBACEC,UAAWH,EACXI,QAAS,kBAAMF,EAAaD,IAF9B,SAIE,+BAAOA,Q,svCCGLI,IAAM,SAANA,MAAa,IAAD,UACUC,oDAAS,IADnB,uLACTC,MADS,cACFC,SADE,cAGVC,MAAQC,oDAAMH,MAAO,gBACrBI,MACJF,MAAMG,OAAS,EACXH,MAAMA,MAAMG,OAAS,GACrB,IACNC,QAAQC,IAAI,oBAAqBH,OAEjC,IAAMI,qBAAuB,SAACd,GAC5BY,QAAQC,IAAI,kBAGd,OACE,oEAAMX,UAAU,mBAAhB,UACE,2DAAC,kDAAD,CAAQQ,MAAOA,QACf,2DAAC,mDAAD,CACEK,cAAe,SAACC,GACdT,SAAS,GAAD,OAAID,OAAJ,OAAYU,OAGxB,2DAAC,2DAAD,CACEC,iBAAkB,SAACC,GACjBX,SAAS,GAAD,OAAID,OAAJ,OAAYY,KAEtBC,aAAc,sBAACC,OACbb,SAASc,KAAKf,OAAOgB,eAGzB,2DAAC,qDAAD,CACEC,eAAgB,WACdhB,SAAS,KAEXiB,SAAU,WACR,GAAIlB,MAAMK,OAAS,EAAG,CACpB,IAAMc,EAAcnB,MAAMoB,UACxB,EACApB,MAAMK,OAAS,GAEjBJ,SAASkB,WAQNrB,2B,uDClCAuB,IAtBG,SAAC,GAAD,IAChBJ,EADgB,EAChBA,eACAC,EAFgB,EAEhBA,SAFgB,OAIhB,0BAAStB,UAAU,YAAnB,UACE,cAAC,IAAD,CACEH,KAAK,mBACLC,KAAK,QACLC,aAAcsB,IAEhB,cAAC,IAAD,CACEvB,KAAK,SACLC,aAAcuB,S,sDCZdI,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEtCC,EAAgB,SAACd,GAQrB,OAAOa,EAAQE,KAPM,SAACd,GAAD,OACnB,cAAC,IAAD,CAEEhB,KAAMgB,EAAOM,WACbrB,aAAcc,GAFTC,OAkBIe,IAVC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,cAAH,OACd,yBAASb,UAAU,UAAnB,SACG2B,EAAcd,O,sECfbiB,EAAiB,SAAC,GAAD,IACrBf,EADqB,EACrBA,iBACAE,EAFqB,EAErBA,aAFqB,OAIrB,0BAASjB,UAAU,kBAAnB,UACE,cAAC,IAAD,CACEF,KAAK,IACLC,aAAcgB,IAEhB,cAAC,IAAD,CACEjB,KAAK,IACLC,aAAcgB,IAEhB,cAAC,IAAD,CACEjB,KAAK,IACLC,aAAcgB,IAEhB,cAAC,IAAD,CACEjB,KAAK,IACLC,aAAcgB,IAEhB,cAAC,IAAD,CACEjB,KAAK,IACLC,aAAckB,QAKpBa,EAAeC,WAAa,CAC1BhB,iBAAkBiB,IAAUC,KAAKC,WACjCjB,aAAce,IAAUC,KAAKC,YAGhBJ,O,wCCjCTK,G,UAAS,SAAC,GAAD,IAAG3B,EAAH,EAAGA,MAAH,OACb,qBAAKR,UAAU,SAAf,SACE,+BAAOQ,QAQX2B,EAAOC,aAAe,CAAE5B,MAAO,KAEhB2B,O,uFCbfE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cb188609.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../style/buttons.css\";\r\n\r\n// componente funcional\r\nconst Button = ({ type, text, clickHandler }) => (\r\n  <button\r\n    className={type}\r\n    onClick={() => clickHandler(text)}\r\n  >\r\n    <span>{text}</span>\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  clickHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","/*eslint no-eval:0*/\n\nimport React, { useState } from \"react\";\nimport words from \"lodash.words\";\n//components\nimport Functions from \"./components/functions\";\nimport Numbers from \"./components/numbers\";\nimport MathOperations from \"./components/math-operations\";\nimport Result from \"./components/result\";\n\n// style\nimport \"./App.css\";\n\nconst App = () => {\n  const [stack, setStack] = useState(\"\");\n\n  const items = words(stack, /[^-^+^*^/]+/g);\n  const value =\n    items.length > 0\n      ? items[items.length - 1]\n      : \"0\";\n  console.log(\"renderizado items\", value);\n\n  const clickHandlerFunction = (text) => {\n    console.log(\"click handler\");\n  };\n\n  return (\n    <main className=\"react-calculator\">\n      <Result value={value} />\n      <Numbers\n        onClickNumber={(number) => {\n          setStack(`${stack}${number}`);\n        }}\n      />\n      <MathOperations\n        onClickOperation={(operation) => {\n          setStack(`${stack}${operation}`);\n        }}\n        onClickEqual={(equal) => {\n          setStack(eval(stack).toString());\n        }}\n      />\n      <Functions\n        onContentClear={() => {\n          setStack(\"\");\n        }}\n        onDelete={() => {\n          if (stack.length > 0) {\n            const deleteStack = stack.substring(\n              0,\n              stack.length - 1\n            );\n            setStack(deleteStack);\n          }\n        }}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// components\r\nimport Button from \"./button/button\";\r\n\r\nconst Functions = ({\r\n  onContentClear,\r\n  onDelete,\r\n}) => (\r\n  <section className=\"functions\">\r\n    <Button\r\n      type=\"button-long-text\"\r\n      text=\"clear\"\r\n      clickHandler={onContentClear}\r\n    />\r\n    <Button\r\n      text=\"&larr;\"\r\n      clickHandler={onDelete}\r\n    />\r\n  </section>\r\n);\r\n\r\nFunctions.propTypes = {\r\n  onContentClear: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Functions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// components\r\nimport Button from \"./button/button\";\r\n\r\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\n\r\nconst renderButtons = (onClickNumber) => {\r\n  const renderButton = (number) => (\r\n    <Button\r\n      key={number}\r\n      text={number.toString()}\r\n      clickHandler={onClickNumber}\r\n    />\r\n  );\r\n  return numbers.map(renderButton);\r\n};\r\n\r\nconst Numbers = ({ onClickNumber }) => (\r\n  <section className=\"numbers\">\r\n    {renderButtons(onClickNumber)}\r\n  </section>\r\n);\r\n\r\nNumbers.propTypes = {\r\n  onClickNumber: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// components\r\nimport Button from \"./button/button\";\r\n\r\nconst MathOperations = ({\r\n  onClickOperation,\r\n  onClickEqual,\r\n}) => (\r\n  <section className=\"math-operations\">\r\n    <Button\r\n      text=\"+\"\r\n      clickHandler={onClickOperation}\r\n    />\r\n    <Button\r\n      text=\"-\"\r\n      clickHandler={onClickOperation}\r\n    />\r\n    <Button\r\n      text=\"*\"\r\n      clickHandler={onClickOperation}\r\n    />\r\n    <Button\r\n      text=\"/\"\r\n      clickHandler={onClickOperation}\r\n    />\r\n    <Button\r\n      text=\"=\"\r\n      clickHandler={onClickEqual}\r\n    />\r\n  </section>\r\n);\r\n\r\nMathOperations.propsTypes = {\r\n  onClickOperation: PropTypes.func.isRequired,\r\n  onClickEqual: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MathOperations;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// style\r\nimport \"../App.css\";\r\n\r\nconst Result = ({ value }) => (\r\n  <div className=\"result\">\r\n    <span>{value}</span>\r\n  </div>\r\n);\r\n\r\nResult.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nResult.defaultProps = { value: \"0\" };\r\n\r\nexport default Result;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}